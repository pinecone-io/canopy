[tool.poetry]
name = "pinecone-resin"
version = "0.1.0"
description = "Resin is an orchestration engine for intergating LLMs with Pinecone."
authors = ["Relevance Team <relevance@pinecone.io>"]
readme = "README.md"
packages = [{include = "resin", from = "src"},
            {include = "resin_cli", from = "src"},]


[tool.poetry.dependencies]
python = "^3.9"
pinecone-client = "^2.2.2"
python-dotenv = "^1.0.0"
openai = "^0.27.5"
tiktoken = "^0.3.3"
pinecone-datasets = "^0.6.1"
pydantic = "^1.10.7"
pinecone-text = { version = "^0.6.0", extras = ["openai"] }
pandas-stubs = "^2.0.3.230814"
fastapi = "^0.92.0"
uvicorn = "^0.20.0"
tenacity = "^8.2.1"
sse-starlette = "^1.6.5"
types-tqdm = "^4.61.0"
gunicorn = "^21.2.0"
types-pyyaml = "^6.0.12.12"


[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
pytest = "^7.3.2"
mypy = "^1.4.1"
flake8 = "^6.1.0"
pytest-html = "^3.2.0"
flake8-pyproject = "^1.2.3"
asyncio = "^3.4.3"
pytest-asyncio = "^0.14.0"
pytest-mock = "^3.6.1"
pytest-xdist = "^3.3.1"
types-requests = "^2.31.0.2"
httpx = "^0.25.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
allow_redefinition = true
exclude = ['tests']

[[tool.mypy.overrides]]
module = [
    'pinecone_text.*',
    'pinecone_datasets',
    'pinecone'
]
ignore_missing_imports = true


[tool.flake8]
per-file-ignores = [
    '*/__init__.py:F401',
]
max-line-length = 88

[tool.poetry.scripts]
resin = "resin_cli.cli:cli"
service = "resin_cli.service.app:start"
