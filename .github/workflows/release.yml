name: 'Release'

on:
  workflow_dispatch:
    inputs:
      releaseLevel:
        description: 'Release level'
        required: true
        type: choice
        default: 'patch'
        options:
          - 'patch' # bug fixes
          - 'minor' # new features, backwards compatible
          - 'major' # breaking changes
      generateBranch:
        description: 'Whether to generate a release branch'
        required: true
        type: boolean
        default: false
      generateTag:
        description: 'Whether to generate a release tag'
        required: true
        type: boolean
        default: true
  push:

env:
  PYPI_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
  PYPI_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9  # The lowest we support

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2

      - name: Bump version
        run: |
          poetry version ${{ inputs.releaseLevel || 'patch' }}

      - name: Build wheel
        run: |
          poetry build

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./dist/

  test-all-OSes:
    needs: build
    uses: ./.github/workflows/pre-release-CI.yml

  publish:
    needs: test-all-OSes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2

      - name: download wheels
        uses: actions/download-artifact@v2
        with:
          path: ./dist/

      - name: Commit version update
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "relevance@pinecone.io"
          git add pyproject.toml
          git commit -m "Bump version to $(poetry version -s)"