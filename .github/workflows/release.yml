name: 'PyPI Release: Production (pinecone-client)'

on:
  workflow_dispatch:
    inputs:
      releaseLevel:
        description: 'Release level'
        required: true
        type: choice
        default: 'patch'
        options:
          - 'patch' # bug fixes
          - 'minor' # new features, backwards compatible
          - 'major' # breaking changes
      generateBranch:
        description: 'Whether to generate a release branch'
        required: true
        type: boolean
        default: false
      generateTag:
        description: 'Whether to generate a release tag'
        required: true
        type: boolean
        default: true
  push:

env:
  PYPI_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
  PYPI_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}


jobs:
  build:
    name: Build python${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9, '3.10', 3.11 ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2

      - name: Build wheel
        run: |
          poetry build

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-py${{ matrix.python-version }}
          path: ./dist/

  test-all-OSes:
    needs: build
    uses: ./.github/workflows/pre-release-CI.yml

#  publish:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: download wheels
#        uses: actions/download-artifact@v2
#        with:
#          path: wheels
#
#      - name: debug print wheels
#        run: |
#          ls -lah wheels/